version: 0.2

env:
  # ==================== #
  #  Ref: SECRET CONFIG  #
  # ==================== #
  parameter-store:
    BUILDNUMBER: /devopscorner/cicd/staging/repo/golang-bedrock/buildnumber
    STORE_AWS_ACCOUNT: /devopscorner/cicd/staging/credentials/aws_account
    STORE_AWS_ACCESS_KEY: /devopscorner/cicd/staging/credentials/aws_access_key
    STORE_AWS_SECRET_KEY: /devopscorner/cicd/staging/credentials/aws_secret_key
    STORE_AWS_PROFILE: /devopscorner/cicd/staging/credentials/aws_profile
    STORE_REPO_URL: /devopscorner/cicd/staging/repo/golang-bedrock/url
    STORE_REPO_BRANCH: /devopscorner/cicd/staging/repo/golang-bedrock/branch
    STORE_REPO_FOLDER: /devopscorner/cicd/staging/repo/golang-bedrock/folder
    STORE_EKS_CLUSTER: /devopscorner/cicd/staging/eks_cluster
    STORE_DOCKERHUB_USERNAME: /devopscorner/cicd/staging/repo_credentials/dockerhub/username
    STORE_DOCKERHUB_PASSWORD: /devopscorner/cicd/staging/repo_credentials/dockerhub/password_encoded
    STORE_KUBE_CONFIG: /devopscorner/cicd/staging/credentials/base64_kube_config

  # ===================================== #
  #  Ref: Pipeline Environment Variables  #
  # ===================================== #
  variables:
    ENV_CICD: "nonprod"
    AWS_DEFAULT_REGION: "us-west-2"
    INFRA_CICD: "terraform/devopscorner/devopspoc/eks"
    INFRA_CICD_PATH: "golang-bedrock"
    INFRA_ECR_PATH: "devopscorner/golang-bedrock"

phases:
  build:
    commands:
      # ========================= #
      #  Refactoring AWS Account  #
      # ========================= #
      - cd ${CODEBUILD_SRC_DIR} && find ./ -type f -exec sed -i "s/YOUR_AWS_ACCOUNT/${STORE_AWS_ACCOUNT}/g" {} \;
      # ================== #
      #  Helm Repo Update  #
      # ================== #
      - AWS_REGION=${AWS_DEFAULT_REGION} helm repo add devopscorner-staging s3://devopscorner-adot-chart/staging
      - AWS_REGION=${AWS_DEFAULT_REGION} helm repo add devopscorner-prod s3://devopscorner-adot-chart/prod
      - helm repo update
      # ============ #
      #  Deploy K8S  #
      # ============ #
      - cd $CODEBUILD_SRC_DIR/_infra/helm/${ENV_CICD}
      - export AWS_ACCESS_KEY=${STORE_AWS_ACCESS_KEY}
      - export AWS_SECRET_KEY_ID=${STORE_AWS_SECRET_KEY}
      - aws eks update-kubeconfig --region ${AWS_DEFAULT_REGION} --name ${STORE_EKS_CLUSTER}
      - kubectl version --output=yaml
      # - kubectl config view --raw > ~/.kube/config
      - kubectl config use-context arn:aws:eks:${AWS_DEFAULT_REGION}:${STORE_AWS_ACCOUNT}:cluster/${STORE_EKS_CLUSTER}
      # - kubectl get ns -A --kubeconfig ~/.kube/config
      - kubectl get ns -A
      - helm version --client
      - helm upgrade --install golang-bedrock helm/devopscornner-bedrock/stateful -f manifest/helm-value-golanng-bedrock.yaml --create-namespace -n golang-app
      - echo '-- ALL DONE --'

artifacts:
  files:
    - .aws/*
    - .codecatalyst/*
    - src/*
    - Dockerfile
    - docker-compose.yaml
    - dockerhub-build.sh
    - dockerhub-push.sh
    - dockerhub-tag.sh
    - ecr-build.sh
    - ecr-push.sh
    - ecr-tag.sh
    - Makefile
  name: "artifact-$(date '+%Y%m%d-%H%M%S')"