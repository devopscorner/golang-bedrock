apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: traffic-golang-bedrock
  name: traffic-golang-bedrock
  namespace: devopscorner
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: traffic-golang-bedrock
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: traffic-golang-bedrock
  name: traffic-golang-bedrock
  namespace: devopscorner
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: traffic-golang-bedrock
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.service: traffic-golang-bedrock
    spec:
      containers:
        - args:
            - /bin/bash
            - -c
            - sleep 10; while :; do curl bookstore-adot:8080/metrics > /dev/null 1>&1; sleep 2; curl bookstore-adot:8080/health > /dev/null 2>&1; sleep 5; done
          image: ellerbrock/alpine-bash-curl-ssl:latest
          name: traffic-golang-bedrock
          ports:
            - containerPort: 8080
          resources: {}
      restartPolicy: Always
status: {}
