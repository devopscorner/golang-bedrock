{
	"info": {
		"_postman_id": "33af91c8-d41b-46f3-bf57-3efa1c64ed6f",
		"name": "RESTful API - Golang Bedrock SQLite ORM",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "260154"
	},
	"item": [
		{
			"name": "Fetch PostmanBDD",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var url_restapi = postman.getGlobalVariable(\"url_restapi\");",
							"tests[\"Success to open welcome page => \" +url_restapi] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "http://bigstickcarpet.com/postman-bdd/dist/postman-bdd.min.js",
					"protocol": "http",
					"host": [
						"bigstickcarpet",
						"com"
					],
					"path": [
						"postman-bdd",
						"dist",
						"postman-bdd.min.js"
					]
				}
			},
			"response": []
		},
		{
			"name": "Welcome",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{api_url}}:8080",
					"host": [
						"{{api_url}}"
					],
					"port": "8080"
				},
				"description": "localhost:8080/books"
			},
			"response": []
		},
		{
			"name": "Healthcheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{api_url}}:8080/health",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"health"
					]
				},
				"description": "localhost:8080/books"
			},
			"response": []
		},
		{
			"name": "Metrics",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{api_url}}:8080/metrics",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"metrics"
					]
				},
				"description": "localhost:8080/books"
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// ----------------------------------------- //",
							"//  JSON Response Body                       //",
							"// ----------------------------------------- //",
							"/*",
							"{",
							"  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOjIsImlzcyI6Imh0dHA6XC9cL215Y2FtcHVzLmFwcFwvYXBpXC9hdXRoXC9sb2dpbiIsImlhdCI6MTQ4MDkxODgzNiwiZXhwIjoxNDgwOTIyNDM2LCJuYmYiOjE0ODA5MTg4MzYsImp0aSI6IjBhNzRiOTJjMTExNzJkYzdiNDhmMzE5MWQ4MWIyMmYyIn0.7rKJGJfwDRwxhTQql1dlWWLrrRVmIK6rwpjaxewjNZE\"",
							"}",
							"*/",
							"",
							"// ----------------------------------------- //",
							"//  JSON Schema References                   //                              ",
							"// ----------------------------------------- //",
							"//  References: https://spacetelescope.github.io/understanding-json-schema/structuring.html",
							"",
							"var schema_test = {",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"    ",
							"    \"title\":\"User Login (JWT)\",",
							"    \"description\":\"User login\",",
							"    ",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"token\": { \"type\": \"string\" }",
							"        },",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"            \"refresh_token\": { \"type\": \"string\" }",
							"        },",
							"        \"additionalProperties\": false,",
							"    }",
							"};",
							"",
							"",
							"// ----------------------------------------- //",
							"//  TESTCASE PostmanBDD                      //",
							"// ----------------------------------------- //",
							"//  Load external library from Environment   //",
							"// ----------------------------------------- //",
							"eval(postman.getGlobalVariable('module:postmanBDD'));",
							"",
							"var jsonParse     = pm.response; //tv4",
							"var response_data = tv4.validateResult(responseBody, schema_test);",
							"var title_data    = \"user login\";",
							"",
							"var jsonData      = jsonParse.json();",
							"var token         = jsonData.token;",
							"var refresh_token = jsonData.refresh_token;",
							"",
							"// ----------------------------------------- //",
							"//  Set Global Variable Token                //",
							"// ----------------------------------------- //",
							"postman.setGlobalVariable(\"auth_token\", token);",
							"// postman.setGlobalVariable(\"refresh_token\", refresh_token);",
							"",
							"//tv4",
							"tests[\"Token: \"+token] = response_data;",
							"// tests[\"Refresh Token: \"+refresh_token] = response_data;"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"devopscorner-user\",\n    \"password\": \"DevOpsCorner2024\"\n}"
				},
				"url": {
					"raw": "{{api_url}}:8080/login",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"login"
					]
				},
				"description": "localhost:8080/books"
			},
			"response": []
		},
		{
			"name": "List Uploaded Files",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{api_url}}:8080/v1/files",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"v1",
						"files"
					]
				},
				"description": "localhost:8080/books"
			},
			"response": []
		},
		{
			"name": "Find Uploaded File Id 1",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{api_url}}:8080/v1/files/1725417360394229000",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"v1",
						"files",
						"1725417360394229000"
					]
				},
				"description": "localhost:8080/books"
			},
			"response": []
		},
		{
			"name": "Find Uploaded File Id 2",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{api_url}}:8080/v1/files/1725383792358030000",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"v1",
						"files",
						"1725383792358030000"
					]
				},
				"description": "localhost:8080/books"
			},
			"response": []
		},
		{
			"name": "Find Uploaded File Id 3",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{api_url}}:8080/v1/files/1725417214616798000",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"v1",
						"files",
						"1725417214616798000"
					]
				},
				"description": "localhost:8080/books"
			},
			"response": []
		},
		{
			"name": "Upload File 1",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "FileType",
							"value": "application/pdf",
							"type": "text"
						},
						{
							"key": "UploadedBy",
							"value": "user1@example.com",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/dfdenni/Desktop/Learning-DevOps.pdf"
						}
					]
				},
				"url": {
					"raw": "{{api_url}}:8080/v1/files",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"v1",
						"files"
					]
				},
				"description": "localhost:8080/books"
			},
			"response": [
				{
					"name": "Example Result File 1",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "FileType",
									"value": "application/pdf",
									"type": "text"
								},
								{
									"key": "UploadedBy",
									"value": "user1@example.com",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/Users/dfdenni/Desktop/Learning-DevOps.pdf"
								}
							]
						},
						"url": {
							"raw": "{{api_url}}:8080/v1/files",
							"host": [
								"{{api_url}}"
							],
							"port": "8080",
							"path": [
								"v1",
								"files"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Wed, 04 Sep 2024 02:26:53 GMT"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"analysis\": \"Based on the information provided, here's an analysis of the file upload:\\n\\n1. **Filename**: `1725416786086072000_Learning-DevOps.pdf`\\n   - The filename suggests that it is a PDF file related to learning DevOps.\\n   - The filename contains a long numerical sequence (`1725416786086072000`) before the descriptive part (`Learning-DevOps.pdf`). This numerical sequence could be a unique identifier, timestamp, or some other form of file naming convention.\\n\\n2. **File Size**: `19141577 bytes`\\n   - The file size is approximately 19.14 MB (megabytes).\\n   - For a PDF file, this size is relatively large, indicating that the file may contain a substantial amount of content, such as text, images, or other embedded media.\\n\\n3. **File Type**: `application/pdf`\\n   - The file type is a Portable Document Format (PDF), which is a widely used format for sharing documents across different platforms and devices.\\n   - PDF files can contain text, images, multimedia, and interactive elements, making them suitable for various purposes, including educational materials, manuals, reports, and presentations.\\n\\nBased on the filename and file type, it appears that this file is likely a PDF document related to learning DevOps practices. The relatively large file size suggests that it may contain extensive content, potentially including text, diagrams, or other multimedia elements.\\n\\nPDF files are generally considered safe for sharing and viewing, as long as they are obtained from trusted sources and opened with updated PDF viewers or readers. However, it's always a good practice to scan files for potential security risks before opening them, especially if they come from untrusted sources.\",\n        \"createdAt\": \"2024-09-04T09:26:43.750343+07:00\",\n        \"fileName\": \"1725416786086072000_Learning-DevOps.pdf\",\n        \"fileSize\": 19141577,\n        \"fileType\": \"application/pdf\",\n        \"fileURL\": \"https://example.s3.amazonaws.com/1725416786086072000_Learning-DevOps.pdf\",\n        \"id\": \"1725416786086072000\",\n        \"metrics\": {\n            \"analysisLatency\": \"9.313159125s\",\n            \"inputTokens\": 30,\n            \"outputTokens\": 419,\n            \"totalLatency\": \"9.314087583s\",\n            \"uploadLatency\": \"610.458µs\"\n        },\n        \"updatedAt\": \"2024-09-04T09:26:53.071124+07:00\",\n        \"uploadedBy\": \"user1@example.com\"\n    }\n}"
				}
			]
		},
		{
			"name": "Upload File 2",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "FileType",
							"value": "application/pdf",
							"type": "text"
						},
						{
							"key": "UploadedBy",
							"value": "user1@example.com",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/dfdenni/Desktop/Learning-DevOps.pdf"
						}
					]
				},
				"url": {
					"raw": "{{api_url}}:8080/v1/files",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"v1",
						"files"
					]
				},
				"description": "localhost:8080/books"
			},
			"response": []
		},
		{
			"name": "Upload File 3",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "FileType",
							"value": "application/pdf",
							"type": "text"
						},
						{
							"key": "UploadedBy",
							"value": "user1@example.com",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "/Users/dfdenni/Desktop/Learning-DevOps.pdf"
						}
					]
				},
				"url": {
					"raw": "{{api_url}}:8080/v1/files",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"v1",
						"files"
					]
				},
				"description": "localhost:8080/books"
			},
			"response": []
		},
		{
			"name": "Edit Uploaded File Id",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"fileName\": \"1725386092471912000_Learning-DevOps.pdf\",\n    \"fileSize\": 19141577,\n    \"fileType\": \"application/pdf\",\n    \"fileURL\": \"https://example.s3.amazonaws.com/1725386092471912000_Learning-DevOps.pdf\",\n    \"uploadedBy\": \"user2@example.com\",\n    \"analysis\": \"Analysis failed: Bedrock model not found. Please check configuration.\"\n}"
				},
				"url": {
					"raw": "{{api_url}}:8080/v1/files/1725383792358030000",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"v1",
						"files",
						"1725383792358030000"
					]
				},
				"description": "localhost:8080/books/3"
			},
			"response": []
		},
		{
			"name": "Delete Uploade File Id",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{api_url}}:8080/v1/files/1725383792358030000",
					"host": [
						"{{api_url}}"
					],
					"port": "8080",
					"path": [
						"v1",
						"files",
						"1725383792358030000"
					]
				},
				"description": "localhost:8080/books/3"
			},
			"response": []
		}
	]
}