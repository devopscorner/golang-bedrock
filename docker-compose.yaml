version: '3.7'

#================================================================================================
# NETWORK SETUP
#================================================================================================
networks:
  devopscorner_net:
    name: devopscorner_net
    driver: bridge
    ipam:
      config:
        - subnet: 172.148.0.0/16

#================================================================================================
# VOLUME SETUP
#================================================================================================
volumes:
  vol_portainer:
    driver: ${VOLUMES_DRIVER:-local}
    driver_opts:
      o: bind
      type: none
      device: ${DATA_PORTAINER:-/opt/data/docker/portainer2.9}
  vol_goLANG_BEDROCK:
    driver: ${VOLUMES_DRIVER:-local}
    driver_opts:
      o: bind
      type: none
      device: ${DATA_GOLANG_BEDROCK:-/opt/data/docker/golang-bedrock}

services:
  #================================================================================================
  # PORTAINER
  #================================================================================================
  portainer:
    # image: dockerframework/portainer:${PORTAINER_VERSION:-2.9}
    image: portainer/portainer-ce:${PORTAINER_VERSION:-2.20.3-alpine}
    container_name: ${CONTAINER_PORTAINER:-devopscorner_portainer}
    restart: unless-stopped
    ports:
      - "${PORT_PORTAINER:-5212}:9000"
    volumes:
    # - /etc/localtime:/etc/localtime:ro          ## Do not use it in mac
      - /var/run/docker.sock:/var/run/docker.sock ## Do not use it in k8s
      - /opt/data/docker/portainer2.20:/data
    environment:
      - PORTAINER_TEMPLATE=generic
      - PORTAINER_VERSION=${PORTAINER_VERSION:-2.20.3-alpine}
    privileged: true
    networks:
      devopscorner_net:
        ipv4_address: ${CONTAINER_IP_PORTAINER:-172.148.148.5}

  #================================================================================================
  # OTEL
  #================================================================================================
  otel:
    image: amazon/aws-otel-collector:latest
    container_name: ${CONTAINER_OTEL:-devopscorner_otel}
    restart: unless-stopped
    ports:
      - "1777:1777"   # pprof extension
      - "55679:55679" # zpages extension
      - "4317:4317"   # OTLP receiver
      - "13133"       # health_check
    volumes:
     - ./docker/config/otel/config.yaml:/etc/otel-agent-config.yaml
     - ~/.aws:/root/.aws
    command: ["--config=/etc/otel-agent-config.yaml"]
    environment:
      - AWS_ACCESS_KEY_ID=YOUR_AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=YOUR_AWS_SECRET_ACCESS_KEY
      - AWS_REGION=us-west-2
    privileged: true
    networks:
      devopscorner_net:
        ipv4_address: ${CONTAINER_IP_PORTAINER:-172.148.148.12}

  #================================================================================================
  # GOLANG-BEDROCK
  #================================================================================================
  golang-bedrock:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${CONTAINER_GOLANG_BEDROCK:-devopscorner_golang_bedrock}
    restart: unless-stopped
    ports:
      - "${PORT_GOLANG_BEDROCK:-8080}:8080"
    volumes:
    # - /etc/localtime:/etc/localtime:ro          ## Do not use it in mac
      - /var/run/docker.sock:/var/run/docker.sock ## Do not use it in k8s
    environment:
      - TZ="Asia/Jakarta"
      - ALPINE_VERSION=${ALPINE_VERSION:-3.18}
      - GIN_MODE=release
      - APP_URL=${APP_URL:-http://0.0.0.0}
      - APP_PORT=${APP_PORT:-8080}
      - DB_CONNECTION=${DB_CONNECTION:-sqlite}
      - DB_HOST=${DB_HOST:-0.0.0.0}
      - DB_PORT=${DB_PORT:-5000}
      - DB_DATABASE=${DB_DATABASE:-golang-bedrock.db}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_AUTH_USERNAME=${JWT_AUTH_USERNAME:-devopscorner}
      - JWT_AUTH_PASSWORD=${JWT_AUTH_PASSWORD:-DevOpsCorner2024}
      - JWT_SECRET=${JWT_SECRET:-s3cr3t}
      # Logger
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      # AWS Credentials
      - AWS_REGION=${AWS_REGION:-us-west-2}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY:-YOUR_AWS_ACCESS_KEY}
      - AWS_SECRET_KEY_ID=${AWS_SECRET_KEY_ID:-YOUR_AWS_SECRET_KEY_ID}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME:-devopscorner-bedrock}
      # OpenSearch
      - OPENSEARCH_ENDPOINT=${OPENSEARCH_ENDPOINT:-https://opensearch.us-west-2.es.amazonaws.com}
      - OPENSEARCH_USERNAME=${OPENSEARCH_USERNAME:-devopscorner}
      - OPENSEARCH_PASSWORD=${OPENSEARCH_PASSWORD:-DevOpsCorner2024}
      # Prometheus
      - PROMETHEUS_ENDPOINT=${PROMETHEUS_ENDPOINT:-http://localhost:9090}
      - PROMETHEUS_PORT=${PROMETHEUS_PORT:-9090}
      # Loki
      - LOKI_ENDPOINT=${LOKI_ENDPOINT:-http://0.0.0.0:3100}
      - LOKI_PORT=${LOKI_PORT:-3100}
      # Grafana
      - GRAFANA_ENDPOINT=${GRAFANA_ENDPOINT:-http://localhost:3000}
      - GRAFANA_PORT=${GRAFANA_PORT:-3000}
      - GRAFANA_API_KEY=${GRAFANA_API_KEY:-YOUR_GRAFANA_API_KEY}
      # OpenTelemetry
      - OTEL_INSTRUMENTATION_METRIC_ENABLED=${OTEL_INSTRUMENTATION_METRIC_ENABLED:-true}
      - OTEL_INSTRUMENTATION_TRACE_ENABLED=${OTEL_INSTRUMENTATION_TRACE_ENABLED:-true}
      - OTEL_INSTRUMENTATION_LOG_ENABLED=${OTEL_INSTRUMENTATION_LOG_ENABLED:-true}
      - OTEL_INSTRUMENTATION_TRACE_NAME=${OTEL_INSTRUMENTATION_TRACE_NAME:-jaeger}
      - OTEL_ENVIRONMENT=${OTEL_ENVIRONMENT:-nonprod}
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME:-golang-bedrock}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-http://localhost:4317}
      - OTEL_EXPORTER_OTLP_INSECURE=${OTEL_EXPORTER_OTLP_INSECURE:-true}
      - OTEL_EXPORTER_OTLP_HEADERS=${OTEL_EXPORTER_OTLP_HEADERS}
      - OTEL_RESOURCE_ATTRIBUTES=${OTEL_RESOURCE_ATTRIBUTES}
      - OTEL_TIME_INTERVAL=${OTEL_TIME_INTERVAL:-1}
      - OTEL_RANDOM_TIME_ALIVE_INCREMENTER=${OTEL_RANDOM_TIME_ALIVE_INCREMENTER:-1}
      - OTEL_RANDOM_TOTAL_HEAP_SIZE_UPPER_BOUND=${OTEL_RANDOM_TOTAL_HEAP_SIZE_UPPER_BOUND:-100}
      - OTEL_RANDOM_THREAD_ACTIVE_UPPOR_BOUND=${OTEL_RANDOM_THREAD_ACTIVE_UPPOR_BOUND:-10}
      - OTEL_RANDOM_CPU_USAGE_UPPER_BOUND=${OTEL_RANDOM_CPU_USAGE_UPPER_BOUND:-100}
      # Jaeger
      - JAEGER_AGENT_PORT=${JAEGER_AGENT_PORT:-6831}
      - JAEGER_SAMPLER_TYPE=${JAEGER_SAMPLER_TYPE:-const}
      - JAEGER_SAMPLER_PARAM=${JAEGER_SAMPLER_PARAM:-1}
      - JAEGER_SAMPLER_MANAGER_HOST_PORT=${JAEGER_SAMPLER_MANAGER_HOST_PORT}
      - JAEGER_REPORTER_LOG_SPANS=${JAEGER_REPORTER_LOG_SPANS:-true}
      - JAEGER_REPORTER_BUFFER_FLUSH_INTERVAL=${JAEGER_REPORTER_BUFFER_FLUSH_INTERVAL:-5}
      - JAEGER_REPORTER_MAX_QUEUE_SIZE=${JAEGER_REPORTER_MAX_QUEUE_SIZE:-100}
      - JAEGER_REPORTER_LOCAL_AGENT_HOST_PORT=${JAEGER_REPORTER_LOCAL_AGENT_HOST_PORT}
      - JAEGER_REPORTER_COLLECTOR_ENDPOINT=${JAEGER_REPORTER_COLLECTOR_ENDPOINT:-http://localhost:14268/api/traces}
      - JAEGER_REPORTER_COLLECTOR_USER=${JAEGER_REPORTER_COLLECTOR_USER:-devopscorner}
      - JAEGER_REPORTER_COLLECTOR_PASSWORD=${JAEGER_REPORTER_COLLECTOR_PASSWORD:-DevOpsCorner2024}
      - JAEGER_TAGS=${JAEGER_TAGS:-golang,otel,restful,api,bedrock}
      # X-Ray
      - XRAY_VERSION=${XRAY_VERSION:-latest}
      - XRAY_DAEMON_ENDPOINT=${XRAY_DAEMON_ENDPOINT:-https://xray.us-west-2.amazonaws.com}
      - XRAY_DAEMON_PORT=${XRAY_DAEMON_PORT:-2000}
    privileged: true
    tty: true
    networks:
      devopscorner_net:
        ipv4_address: ${CONTAINER_IP_GOLANG_BEDROCK:-172.148.148.225}
